# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2
# Use a package of configuration called an orb.
# orbs:
  # Declare a dependency on the welcome-orb
  # welcome: circleci/welcome-orb@0.4.1
# Orchestrate or schedule a set of jobs

jobs:
  one:
    docker:
      - image: circleci/ruby:2.4.1
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD # context / project UI env-var reference
    steps:
      - checkout
      - run: echo "Mazel Tuv d00d!"
      - run: mkdir -p my_workspace
      - run: echo "Testing workspace 101" > my_workspace/echo-output
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory
          root: my_workspace
          # Must be relative path from root
          paths:
            - echo-output
  two:
    docker:
      - image: circleci/ruby:2.4.1
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - run: echo "La familiar merci"
      - attach_workspace:
          at: my_workspace

      - run: |
          if [[ $(cat my_workspace/echo-output) == "Testing workspace 101" ]]; then
            echo "C'est Gucci beaucoup!";
          else
            echo "Non!"; exit 1
          fi
  save_output:
    docker:
      - image: circleci/ruby:2.4.1
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD
    steps:
      - run: echo "Save this output in file" > my_workspace/output.txt
      - persist_to_workspace:
          root: my_workspace
          paths:
            - output.txt
  print_output:
    docker:
      - image: circleci/ruby:2.4.1
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD
    steps:
      - attach_workspace:
          at: output.txt
      - run: cat output.txt
workflows:
  version: 2
  # Name the workflow "one_and_two"
  one_and_two:
    # Run the one_and_two jobs in its own container
    jobs:
      - one
      - two:
          requires:
            - one
      - save_output
      - print_output:
          requires:
            - save_output
